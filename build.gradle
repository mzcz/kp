buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
		generatedSourcesDir = file("src/main/generated")
	}
	repositories {
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


group = 'com.kp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	mavenLocal()
}

sourceSets {
	main {
		java {
			srcDir "src/main/java"
			srcDir generatedSourcesDir
		}
	}
}

configurations {
	jdbcdriver
	xdb
	querydslapt
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	//compile('mysql:mysql-connector-java')
	//compile('org.postgresql:postgresql')
	compile ("com.oracle:ojdbc6:11.2.0")
	xdb 'com.oracle:xdb6:1.0'
	compile("org.springframework:spring-jdbc")
	compile("org.springframework.boot:spring-boot-starter-jdbc")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
	compile('org.projectlombok:lombok')
	//providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

	compile  "com.mysema.querydsl:querydsl-core:3.7.4"
	compile  "com.mysema.querydsl:querydsl-jpa:3.7.4"
	querydslapt  "com.mysema.querydsl:querydsl-apt:3.7.4"

	//Swager
	compile('io.springfox:springfox-swagger2:2.7.0')
	compile('io.springfox:springfox-swagger-ui:2.7.0')
	compile('com.google.code.gson:gson:2.8.2')

	compile ('org.springframework.boot:spring-boot-starter-thymeleaf')

	compile 'io.reactivex:rxjava:1.3.4'

}

configurations {
	querydslapt
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	source = sourceSets.main.java
	classpath = configurations.compile + configurations.querydslapt
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = generatedSourcesDir
}
compileJava {
	doFirst {
		generatedSourcesDir.mkdirs();
	}
	options.compilerArgs += ['-s', generatedSourcesDir]

	dependsOn generateQueryDSL
}


